@model FUTOMedical.Models.Entities.Admission

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_FutoLayout.cshtml";
}


<div class="row">
    <!-- page header -->
    <div class="col-lg-12">
        <h1 class="page-header">Edit Admission</h1>
    </div>
    <!--end page header -->
</div>
<div class="row">
    <div class="col-lg-2"></div>
    <div class="col-lg-8">
        <!-- Form Elements -->
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3> Edit Admission </h3>
                @if (TempData["error"] != null)
                {
                    <div class="alert alert-danger alert-dismissible">
                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                        <h4><i class="icon fa fa-ban"></i> Alert!</h4>
                        @TempData["error"]
                    </div>
                }
            </div>
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                <div class="panel-body">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)
                    @Html.HiddenFor(model => model.PatientId)
                    @Html.HiddenFor(model => model.OPDId)
                    @Html.HiddenFor(model => model.DateAdmitted)


                    <div class="form-group">
                        @Html.LabelFor(model => model.RoomNo, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            <select class="form-control" name="RoomNo">
                                <option value="WARD 1">WARD 1</option>
                                <option value="WARD 2">WARD 2</option>
                                <option value="WARD 3">WARD 3</option>
                                <option value="WARD 4">WARD 4</option>
                                <option value="WARD 5">WARD 5</option>
                                <option value="WARD 6">WARD 6</option>
                                <option value="WARD 7">WARD 7</option>
                                <option value="WARD 8">WARD 8</option>
                            </select>
                            @Html.ValidationMessageFor(model => model.RoomNo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.BedNo, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            <select class="form-control" name="BedNo">
                                <option value="Bed 1">BED 1</option>
                                <option value="Bed 2">BED 2</option>
                                <option value="Bed 3">BED 3</option>

                            </select>
                            @Html.ValidationMessageFor(model => model.BedNo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            @Html.EnumDropDownListFor(model => model.Status, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <button type="submit" class="btn btn-primary">Save</button>
                    <button type="reset" class="btn btn-success">Reset</button>

                </div>
            }
        </div>
        <!-- End Form Elements -->
    </div>
    <div class="col-lg-2"></div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}





















@*<h2>Edit</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Admission</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.RoomNo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RoomNo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RoomNo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BedNo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BedNo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BedNo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.Status, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@
